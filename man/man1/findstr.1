'\" t
.\" Automatically generated by Pandoc 2.17.0.1
.\"
.TH "findstr" 1 "" "" "" ""
.hy
.SH findstr
.PP
Searches for patterns of text in files.
.SS Syntax
.IP
.nf
\f[C]
findstr [/b] [/e] [/l | /r] [/s] [/i] [/x] [/v] [/n] [/m] [/o] [/p] [/f:<file>] [/c:<string>] [/g:<file>] [/d:<dirlist>] [/a:<colorattribute>] [/off[line]] <strings> [<drive>:][<path>]<filename>[ ...]
\f[R]
.fi
.SS Parameters
.PP
.TS
tab(@);
lw(31.5n) lw(38.5n).
T{
Parameter
T}@T{
Description
T}
_
T{
/b
T}@T{
Matches the text pattern if it is at the beginning of a line.
T}
T{
/e
T}@T{
Matches the text pattern if it is at the end of a line.
T}
T{
/l
T}@T{
Processes search strings literally.
T}
T{
/r
T}@T{
Processes search strings as regular expressions.
This is the default setting.
T}
T{
/s
T}@T{
Searches the current directory and all subdirectories.
T}
T{
/i
T}@T{
Ignores the case of the characters when searching for the string.
T}
T{
/x
T}@T{
Prints lines that match exactly.
T}
T{
/v
T}@T{
Prints only lines that don\[cq]t contain a match.
T}
T{
/n
T}@T{
Prints the line number of each line that matches.
T}
T{
/m
T}@T{
Prints only the file name if a file contains a match.
T}
T{
/o
T}@T{
Prints character offset before each matching line.
T}
T{
/p
T}@T{
Skips files with non-printable characters.
T}
T{
/off[line]
T}@T{
Does not skip files that have the offline attribute set.
T}
T{
/f:\f[C]<file>\f[R]
T}@T{
Gets a file list from the specified file.
T}
T{
/c:\f[C]<string>\f[R]
T}@T{
Uses the specified text as a literal search string.
T}
T{
/g:\f[C]<file>\f[R]
T}@T{
Gets search strings from the specified file.
T}
T{
/d:\f[C]<dirlist>\f[R]
T}@T{
Searches the specified list of directories.
Each directory must be separated with a semicolon (;), for example
\f[C]dir1;dir2;dir3\f[R].
T}
T{
/a:\f[C]<colorattribute>\f[R]
T}@T{
Specifies color attributes with two hexadecimal digits.
Type \f[C]color /?\f[R] for additional information.
T}
T{
\f[C]<strings>\f[R]
T}@T{
Specifies the text to search for in \f[I]filename\f[R].
Required.
T}
T{
\f[C][\[rs]<drive>:][<path>]<filename>[...]\f[R]
T}@T{
Specifies the location and file or files to search.
At least one file name is required.
T}
T{
/?
T}@T{
Displays Help at the command prompt.
T}
.TE
.SS Remarks
.IP \[bu] 2
All \f[B]findstr\f[R] command-line options must precede
\f[I]strings\f[R] and \f[I]filename\f[R] in the command string.
.IP \[bu] 2
Regular expressions use both literal characters and meta-characters to
find patterns of text, rather than exact strings of characters.
.RS 2
.IP \[bu] 2
A literal character is a character that doesn\[cq]t have a special
meaning in the regular-expression syntax; instead, it matches an
occurrence of that character.
For example, letters and numbers are literal characters.
.IP \[bu] 2
A meta-character is a symbol with special meaning (an operator or
delimiter) in the regular-expression syntax.
.RS 2
.PP
The accepted meta-characters are:
.PP
.TS
tab(@);
lw(51.6n) lw(18.4n).
T{
Meta-character
T}@T{
Value
T}
_
T{
\f[C].\f[R]
T}@T{
\f[B]Wildcard\f[R] - Any character
T}
T{
\f[C]*\f[R]
T}@T{
\f[B]Repeat\f[R] - Zero or more occurrences of the previous character or
class.
T}
T{
\f[C]\[ha]\f[R]
T}@T{
\f[B]Beginning line position\f[R] - Beginning of the line.
T}
T{
\f[C]$\f[R]
T}@T{
\f[B]Ending line position\f[R] - End of the line.
T}
T{
\f[C][class]\f[R]
T}@T{
\f[B]Character class\f[R] - Any one character in a set.
T}
T{
\f[C][\[ha]class]\f[R]
T}@T{
\f[B]Inverse class\f[R] - Any one character not in a set.
T}
T{
\f[C][x-y]\f[R]
T}@T{
\f[B]Range\f[R] - Any characters within the specified range.
T}
T{
\f[C]\[rs]x\f[R]
T}@T{
\f[B]Escape\f[R] - Literal use of a meta-character.
T}
T{
\f[C]\[rs]<string\f[R]
T}@T{
\f[B]Beginning word position\f[R] - Beginning of the word.
T}
T{
\f[C]string\[rs]>\f[R]
T}@T{
\f[B]Ending word position\f[R] - End of the word.
T}
.TE
.PP
The special characters in regular expression syntax have the most power
when you use them together.
For example, use the combination of the wildcard character (\f[C].\f[R])
and repeat (\f[C]*\f[R]) character to match any string of characters:
\f[C].*\f[R]
.PP
Use the following expression as part of a larger expression to match any
string beginning with \f[I]b\f[R] and ending with \f[I]ing\f[R]:
\f[C]b.*ing\f[R]
.RE
.RE
.IP \[bu] 2
To search for multiple strings in a set of files, you must create a text
file that contains each search criterion on a separate line.
.IP \[bu] 2
Use spaces to separate multiple search strings unless the argument is
prefixed with \f[B]/c\f[R].
.SS Examples
.PP
To search for \f[I]hello\f[R] or \f[I]there\f[R] in file \f[I]x.y\f[R],
type:
.IP
.nf
\f[C]
findstr hello there x.y
\f[R]
.fi
.PP
To search for \f[I]hello there\f[R] in file \f[I]x.y\f[R], type:
.IP
.nf
\f[C]
findstr /c:\[dq]hello there\[dq] x.y
\f[R]
.fi
.PP
To find all occurrences of the word \f[I]Windows\f[R] (with an initial
capital letter W) in the file \f[I]proposal.txt\f[R], type:
.IP
.nf
\f[C]
findstr Windows proposal.txt
\f[R]
.fi
.PP
To search every file in the current directory and all subdirectories
that contained the word \f[I]Windows\f[R], regardless of the letter
case, type:
.IP
.nf
\f[C]
findstr /s /i Windows *.*
\f[R]
.fi
.PP
To find all occurrences of lines that begin with \f[I]FOR\f[R] and are
preceded by zero or more spaces (as in a computer program loop), and to
display the line number where each occurrence is found, type:
.IP
.nf
\f[C]
findstr /b /n /r /c:\[ha] *FOR *.bas
\f[R]
.fi
.PP
To list the exact files that you want to search in a text file, use the
search criteria in the file \f[I]stringlist.txt\f[R], to search the
files listed in \f[I]filelist.txt\f[R], and then to store the results in
the file \f[I]results.out\f[R], type:
.IP
.nf
\f[C]
findstr /g:stringlist.txt /f:filelist.txt > results.out
\f[R]
.fi
.PP
To list every file containing the word \f[I]computer\f[R] within the
current directory and all subdirectories, regardless of case, type:
.IP
.nf
\f[C]
findstr /s /i /m \[rs]<computer\[rs]> *.*
\f[R]
.fi
.PP
To list every file containing the word computer and any other words that
begin with comp, (such as compliment and compete), type:
.IP
.nf
\f[C]
findstr /s /i /m \[rs]<comp.* *.*
\f[R]
.fi
.SS Additional References
.IP \[bu] 2
Command-Line Syntax Key
.SH AUTHORS
JasonGerend.
