'\" t
.\" Automatically generated by Pandoc 2.17.0.1
.\"
.TH "shift" 1 "" "" "" ""
.hy
.SH shift
.PP
Changes the position of batch parameters in a batch file.
.SS Syntax
.IP
.nf
\f[C]
shift [/n <N>]
\f[R]
.fi
.SS Parameters
.PP
.TS
tab(@);
lw(35.0n) lw(35.0n).
T{
Parameter
T}@T{
Description
T}
_
T{
/n \f[C]<N>\f[R]
T}@T{
Specifies to start shifting at the \f[I]N\f[R]th argument, where
\f[I]N\f[R] is any value from \f[I]0\f[R] to \f[I]8\f[R].
Requires command extensions, which are enabled by default.
T}
T{
/?
T}@T{
Displays help at the command prompt.
T}
.TE
.SS Remarks
.IP \[bu] 2
The \f[B]shift\f[R] command changes the values of the batch parameters
\f[B]%0\f[R] through \f[B]%9\f[R] by copying each parameter into the
previous one\[em]the value of \f[B]%1\f[R] is copied to \f[B]%0\f[R],
the value of \f[B]%2\f[R] is copied to \f[B]%1\f[R], and so on.
This is useful for writing a batch file that performs the same operation
on any number of parameters.
.IP \[bu] 2
If command extensions are enabled, the \f[B]shift\f[R] command supports
the \f[B]/n\f[R] command-line option.
The \f[B]/n\f[R] option specifies to start shifting at the Nth argument,
where \f[B]N\f[R] is any value from 0 to 8.
For example, \f[B]SHIFT /2\f[R] would shift \f[B]%3\f[R] to
\f[B]%2\f[R], \f[B]%4\f[R] to \f[B]%3\f[R], and so on, and leave
\f[B]%0\f[R] and \f[B]%1\f[R] unaffected.
Command extensions are enabled by default.
.IP \[bu] 2
You can use the \f[B]shift\f[R] command to create a batch file that can
accept more than 10 batch parameters.
If you specify more than 10 parameters on the command line, those that
appear after the tenth (\f[B]%9\f[R]) will be shifted one at a time into
\f[B]%9\f[R].
.IP \[bu] 2
The \f[B]shift\f[R] command has no effect on the \f[B]%*\f[R] batch
parameter.
.IP \[bu] 2
There\[cq]s no backward \f[B]shift\f[R] command.
After you implement the \f[B]shift\f[R] command, you can\[cq]t recover
the batch parameter (\f[B]%0\f[R]) that existed before the shift.
.SS Examples
.PP
To use a batch file, called \f[I]Mycopy.bat\f[R], to copy a list of
files to a specific directory, type:
.IP
.nf
\f[C]
\[at]echo off
rem MYCOPY.BAT copies any number of files
rem to a directory.
rem The command uses the following syntax:
rem mycopy dir file1 file2 ...
set todir=%1
:getfile
shift
if \[dq]%1\[dq]==\[dq]\[dq] goto end
copy %1 %todir%
goto getfile
:end
set todir=
echo All done
\f[R]
.fi
.SS Additional References
.IP \[bu] 2
Command-Line Syntax Key
.SH AUTHORS
JasonGerend.
